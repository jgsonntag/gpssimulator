#############################################################################
# Makefile for building: gpssimulator
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Fri Oct  4 11:43:51 2013
# Project:  gpssimulator.pro
# Template: app
# Command: $(QMAKE) -o Makefile gpssimulator.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I/usr/include/qt3
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = genericserver.h \
		position.h \
		setupgui.h \
		simgui.h \
		simpleserver.h \
		simplesocket.h
SOURCES = genericserver.cpp \
		main.cpp \
		position.cpp \
		setupgui.cpp \
		simgui.cpp \
		simpleserver.cpp \
		simplesocket.cpp
OBJECTS = genericserver.o \
		main.o \
		position.o \
		setupgui.o \
		simgui.o \
		simpleserver.o \
		simplesocket.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_genericserver.cpp \
		moc_setupgui.cpp \
		moc_simgui.cpp \
		moc_simpleserver.cpp \
		moc_simplesocket.cpp
OBJMOC = moc_genericserver.o \
		moc_setupgui.o \
		moc_simgui.o \
		moc_simpleserver.o \
		moc_simplesocket.o
DIST	   = gpssimulator.pro
QMAKE_TARGET = gpssimulator
DESTDIR  = 
TARGET   = gpssimulator

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: gpssimulator.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile gpssimulator.pro
qmake: 
	@$(QMAKE) -o Makefile gpssimulator.pro

dist: 
	@mkdir -p .tmp/gpssimulator && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/gpssimulator/ && ( cd `dirname .tmp/gpssimulator` && $(TAR) gpssimulator.tar gpssimulator && $(GZIP) gpssimulator.tar ) && $(MOVE) `dirname .tmp/gpssimulator`/gpssimulator.tar.gz . && $(DEL_FILE) -r .tmp/gpssimulator

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

genericserver.o: genericserver.cpp genericserver.h \
		simpleserver.h \
		simplesocket.h

main.o: main.cpp simgui.h \
		position.h \
		genericserver.h \
		simpleserver.h \
		simplesocket.h

position.o: position.cpp position.h

setupgui.o: setupgui.cpp setupgui.h \
		simgui.h \
		position.h \
		genericserver.h \
		simpleserver.h \
		simplesocket.h

simgui.o: simgui.cpp simgui.h \
		setupgui.h \
		position.h \
		genericserver.h \
		simpleserver.h \
		simplesocket.h

simpleserver.o: simpleserver.cpp simpleserver.h \
		simplesocket.h

simplesocket.o: simplesocket.cpp simplesocket.h

moc_genericserver.o: moc_genericserver.cpp  genericserver.h simpleserver.h \
		simplesocket.h

moc_setupgui.o: moc_setupgui.cpp  setupgui.h 

moc_simgui.o: moc_simgui.cpp  simgui.h position.h \
		genericserver.h \
		simpleserver.h \
		simplesocket.h

moc_simpleserver.o: moc_simpleserver.cpp  simpleserver.h simplesocket.h

moc_simplesocket.o: moc_simplesocket.cpp  simplesocket.h 

moc_genericserver.cpp: $(MOC) genericserver.h
	$(MOC) genericserver.h -o moc_genericserver.cpp

moc_setupgui.cpp: $(MOC) setupgui.h
	$(MOC) setupgui.h -o moc_setupgui.cpp

moc_simgui.cpp: $(MOC) simgui.h
	$(MOC) simgui.h -o moc_simgui.cpp

moc_simpleserver.cpp: $(MOC) simpleserver.h
	$(MOC) simpleserver.h -o moc_simpleserver.cpp

moc_simplesocket.cpp: $(MOC) simplesocket.h
	$(MOC) simplesocket.h -o moc_simplesocket.cpp

####### Install

install:  

uninstall:  

